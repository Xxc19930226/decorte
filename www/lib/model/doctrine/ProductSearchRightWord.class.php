<?php

/**
 * ProductSearchRightWord
 *
 * This class has been auto-generated by the Doctrine ORM Framework
 *
 * @package    cosmedecorte
 * @subpackage model
 * @author     BROADTECH INC.
 * @version    SVN: $Id: Builder.php 12 2011-05-12 03:42:19Z oda $
 */
class ProductSearchRightWord extends BaseProductSearchRightWord
{
    public function getWrongWordsString()
    {
        $wrong_words = $this->getWrongWords();
        $wrong_words_string = '';
        foreach ($wrong_words as $wrong_word) {
            if ($wrong_words_string !== '') {
                $wrong_words_string .= ' ';
            }
             $wrong_words_string .= $wrong_word;
        }

        return $wrong_words_string;
    }

    /**
     * オブジェクトの現在の内容を本番環境に反映させる。
     */
    public function liveup()
    {
        $wrong_words = $this->getWrongWords();

        Doctrine_Manager::getInstance()->setCurrentConnection('livedb');

        $live_right_word =
            ProductSearchRightWordTable::getInstance()->
            findOneByWord($this->getWord());

        if ($live_right_word) {
            $values = $this->toArray();
            unset($values['id']);
            unset($values['created_at']);
            unset($values['updated_at']);
            $live_right_word->fromArray($values);
            $live_right_word->setUpdatedAt(null);
        } else {
            $live_right_word = $this->copy();
            $live_right_word->setCreatedAt(null);
            $live_right_word->setUpdatedAt(null);
        }
        $live_right_word->getWrongWords()->clear();
        foreach ($wrong_words as $wrong_word) {
            $live_wrong_word = new ProductSearchWrongWord();
            $live_wrong_word->setWord($wrong_word->getWord());
            $live_wrong_word->setRightWord($live_right_word);
            $live_right_word->getWrongWords()->add($live_wrong_word);
        }
        $live_right_word->
            save(Doctrine_Manager::getInstance()->getConnection('livedb'));

        Doctrine_Manager::getInstance()->setCurrentConnection('doctrine');
    }
}
