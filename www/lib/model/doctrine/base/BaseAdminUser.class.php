<?php

/**
 * BaseAdminUser
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $user_name
 * @property string $password
 * @property string $credentials
 * @property integer $shop_id
 * @property SalonShop $Shop
 * 
 * @method string    getUserName()    Returns the current record's "user_name" value
 * @method string    getPassword()    Returns the current record's "password" value
 * @method string    getCredentials() Returns the current record's "credentials" value
 * @method integer   getShopId()      Returns the current record's "shop_id" value
 * @method SalonShop getShop()        Returns the current record's "Shop" value
 * @method AdminUser setUserName()    Sets the current record's "user_name" value
 * @method AdminUser setPassword()    Sets the current record's "password" value
 * @method AdminUser setCredentials() Sets the current record's "credentials" value
 * @method AdminUser setShopId()      Sets the current record's "shop_id" value
 * @method AdminUser setShop()        Sets the current record's "Shop" value
 * 
 * @package    cosmedecorte
 * @subpackage model
 * @author     BROADTECH INC.
 * @version    SVN: $Id: Builder.php 12 2011-05-12 03:42:19Z oda $
 */
abstract class BaseAdminUser extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('admin_user');
        $this->hasColumn('user_name', 'string', 16, array(
             'type' => 'string',
             'primary' => true,
             'length' => 16,
             ));
        $this->hasColumn('password', 'string', 64, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 64,
             ));
        $this->hasColumn('credentials', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('shop_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('SalonShop as Shop', array(
             'local' => 'shop_id',
             'foreign' => 'id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}