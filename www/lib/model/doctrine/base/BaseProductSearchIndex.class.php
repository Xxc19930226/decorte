<?php

/**
 * BaseProductSearchIndex
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $product_id
 * @property string $keyword
 * @property Product $Product
 * 
 * @method integer            getId()         Returns the current record's "id" value
 * @method integer            getProductId()  Returns the current record's "product_id" value
 * @method string             getKeyword()    Returns the current record's "keyword" value
 * @method Product            getProduct()    Returns the current record's "Product" value
 * @method ProductSearchIndex setId()         Sets the current record's "id" value
 * @method ProductSearchIndex setProductId()  Sets the current record's "product_id" value
 * @method ProductSearchIndex setKeyword()    Sets the current record's "keyword" value
 * @method ProductSearchIndex setProduct()    Sets the current record's "Product" value
 * 
 * @package    cosmedecorte
 * @subpackage model
 * @author     BROADTECH INC.
 * @version    SVN: $Id: Builder.php 12 2011-05-12 03:42:19Z oda $
 */
abstract class BaseProductSearchIndex extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('product_search_index');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('product_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('keyword', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));


        $this->index('keyword', array(
             'fields' => 
             array(
              0 => 'id',
              1 => 'keyword',
             ),
             'type' => 'unique',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Product', array(
             'local' => 'product_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}