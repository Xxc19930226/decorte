<?php

/**
 * BaseSalonReserve
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $shop_id
 * @property string $visit
 * @property integer $members_card_id
 * @property string $name_sei
 * @property string $name_mei
 * @property string $name_sei_kana
 * @property string $name_mei_kana
 * @property integer $age
 * @property string $address
 * @property string $tel
 * @property string $email
 * @property string $hope_date1
 * @property string $hope_date2
 * @property string $hope_date3
 * @property enum $hope_time1
 * @property enum $hope_time2
 * @property enum $hope_time3
 * @property string $menu
 * @property enum $know
 * @property string $request
 * @property enum $reply
 * @property boolean $delete_flag
 * @property SalonShop $Shop
 * 
 * @method integer      getId()              Returns the current record's "id" value
 * @method integer      getShopId()          Returns the current record's "shop_id" value
 * @method string       getVisit()           Returns the current record's "visit" value
 * @method integer      getMembersCardId()   Returns the current record's "members_card_id" value
 * @method string       getNameSei()         Returns the current record's "name_sei" value
 * @method string       getNameMei()         Returns the current record's "name_mei" value
 * @method string       getNameSeiKana()     Returns the current record's "name_sei_kana" value
 * @method string       getNameMeiKana()     Returns the current record's "name_mei_kana" value
 * @method integer      getAge()             Returns the current record's "age" value
 * @method string       getAddress()         Returns the current record's "address" value
 * @method string       getTel()             Returns the current record's "tel" value
 * @method string       getEmail()           Returns the current record's "email" value
 * @method string       getHopeDate1()       Returns the current record's "hope_date1" value
 * @method string       getHopeDate2()       Returns the current record's "hope_date2" value
 * @method string       getHopeDate3()       Returns the current record's "hope_date3" value
 * @method enum         getHopeTime1()       Returns the current record's "hope_time1" value
 * @method enum         getHopeTime2()       Returns the current record's "hope_time2" value
 * @method enum         getHopeTime3()       Returns the current record's "hope_time3" value
 * @method string       getMenu()            Returns the current record's "menu" value
 * @method enum         getKnow()            Returns the current record's "know" value
 * @method string       getRequest()         Returns the current record's "request" value
 * @method enum         getReply()           Returns the current record's "reply" value
 * @method boolean      getDeleteFlag()      Returns the current record's "delete_flag" value
 * @method SalonShop    getShop()            Returns the current record's "Shop" value
 * @method SalonReserve setId()              Sets the current record's "id" value
 * @method SalonReserve setShopId()          Sets the current record's "shop_id" value
 * @method SalonReserve setVisit()           Sets the current record's "visit" value
 * @method SalonReserve setMembersCardId()   Sets the current record's "members_card_id" value
 * @method SalonReserve setNameSei()         Sets the current record's "name_sei" value
 * @method SalonReserve setNameMei()         Sets the current record's "name_mei" value
 * @method SalonReserve setNameSeiKana()     Sets the current record's "name_sei_kana" value
 * @method SalonReserve setNameMeiKana()     Sets the current record's "name_mei_kana" value
 * @method SalonReserve setAge()             Sets the current record's "age" value
 * @method SalonReserve setAddress()         Sets the current record's "address" value
 * @method SalonReserve setTel()             Sets the current record's "tel" value
 * @method SalonReserve setEmail()           Sets the current record's "email" value
 * @method SalonReserve setHopeDate1()       Sets the current record's "hope_date1" value
 * @method SalonReserve setHopeDate2()       Sets the current record's "hope_date2" value
 * @method SalonReserve setHopeDate3()       Sets the current record's "hope_date3" value
 * @method SalonReserve setHopeTime1()       Sets the current record's "hope_time1" value
 * @method SalonReserve setHopeTime2()       Sets the current record's "hope_time2" value
 * @method SalonReserve setHopeTime3()       Sets the current record's "hope_time3" value
 * @method SalonReserve setMenu()            Sets the current record's "menu" value
 * @method SalonReserve setKnow()            Sets the current record's "know" value
 * @method SalonReserve setRequest()         Sets the current record's "request" value
 * @method SalonReserve setReply()           Sets the current record's "reply" value
 * @method SalonReserve setDeleteFlag()      Sets the current record's "delete_flag" value
 * @method SalonReserve setShop()            Sets the current record's "Shop" value
 * 
 * @package    cosmedecorte
 * @subpackage model
 * @author     BROADTECH INC.
 * @version    SVN: $Id: Builder.php 12 2011-05-12 03:42:19Z oda $
 */
abstract class BaseSalonReserve extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('salon_reserve');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('shop_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('visit', 'string', 50, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 50,
             ));
        $this->hasColumn('members_card_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('name_sei', 'string', 20, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 20,
             ));
        $this->hasColumn('name_mei', 'string', 20, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 20,
             ));
        $this->hasColumn('name_sei_kana', 'string', 20, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 20,
             ));
        $this->hasColumn('name_mei_kana', 'string', 20, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 20,
             ));
        $this->hasColumn('age', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('address', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('tel', 'string', 13, array(
             'type' => 'string',
             'notnull' => true,
             'regexp' => '/^[0-9]{2,5}[\\-]?[0-9]{1,4}[\\-]?[0-9]{4}$/',
             'length' => 13,
             ));
        $this->hasColumn('email', 'string', 255, array(
             'type' => 'string',
             'email' => true,
             'length' => 255,
             ));
        $this->hasColumn('hope_date1', 'string', 20, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 20,
             ));
        $this->hasColumn('hope_date2', 'string', 20, array(
             'type' => 'string',
             'length' => 20,
             ));
        $this->hasColumn('hope_date3', 'string', 20, array(
             'type' => 'string',
             'length' => 20,
             ));
        $this->hasColumn('hope_time1', 'enum', null, array(
             'type' => 'enum',
             'values' => 
             array(
              0 => '---',
              1 => '11:00～13:00',
              2 => '13:00～16:00',
              3 => '16:00～18:00',
              4 => '午前',
              5 => '午後',
              6 => '夕方',
              7 => '何時でも可',
             ),
             'notnull' => true,
             ));
        $this->hasColumn('hope_time2', 'enum', null, array(
             'type' => 'enum',
             'values' => 
             array(
              0 => '---',
              1 => '11:00～13:00',
              2 => '13:00～16:00',
              3 => '16:00～18:00',
              4 => '午前',
              5 => '午後',
              6 => '夕方',
              7 => '何時でも可',
             ),
             ));
        $this->hasColumn('hope_time3', 'enum', null, array(
             'type' => 'enum',
             'values' => 
             array(
              0 => '---',
              1 => '11:00～13:00',
              2 => '13:00～16:00',
              3 => '16:00～18:00',
              4 => '午前',
              5 => '午後',
              6 => '夕方',
              7 => '何時でも可',
             ),
             ));
        $this->hasColumn('menu', 'string', 100, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 100,
             ));
        $this->hasColumn('know', 'enum', null, array(
             'type' => 'enum',
             'values' => 
             array(
              0 => '---',
              1 => 'コスメデコルテHP',
              2 => '知人・友達の紹介',
              3 => '家族の紹介',
              4 => '検索サイト(Yahoo/Google)',
              5 => 'その他の検索サイト',
              6 => '雑誌・フリーペーパー',
              7 => '以前から知っていた',
              8 => 'その他',
             ),
             ));
        $this->hasColumn('request', 'string', 1000, array(
             'type' => 'string',
             'length' => 1000,
             ));
        $this->hasColumn('reply', 'enum', null, array(
             'type' => 'enum',
             'values' => 
             array(
              0 => '返信済',
              1 => '未返信',
             ),
             ));
        $this->hasColumn('delete_flag', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('SalonShop as Shop', array(
             'local' => 'shop_id',
             'foreign' => 'id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}