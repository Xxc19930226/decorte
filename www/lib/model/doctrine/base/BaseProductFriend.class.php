<?php

/**
 * BaseProductFriend
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $product_id1
 * @property integer $product_id2
 * @property integer $relation_count
 * @property Product $Product1
 * @property Product $Product2
 * 
 * @method integer       getProductId1()     Returns the current record's "product_id1" value
 * @method integer       getProductId2()     Returns the current record's "product_id2" value
 * @method integer       getRelationCount()  Returns the current record's "relation_count" value
 * @method Product       getProduct1()       Returns the current record's "Product1" value
 * @method Product       getProduct2()       Returns the current record's "Product2" value
 * @method ProductFriend setProductId1()     Sets the current record's "product_id1" value
 * @method ProductFriend setProductId2()     Sets the current record's "product_id2" value
 * @method ProductFriend setRelationCount()  Sets the current record's "relation_count" value
 * @method ProductFriend setProduct1()       Sets the current record's "Product1" value
 * @method ProductFriend setProduct2()       Sets the current record's "Product2" value
 * 
 * @package    cosmedecorte
 * @subpackage model
 * @author     BROADTECH INC.
 * @version    SVN: $Id: Builder.php 12 2011-05-12 03:42:19Z oda $
 */
abstract class BaseProductFriend extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('product_friend');
        $this->hasColumn('product_id1', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             ));
        $this->hasColumn('product_id2', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             ));
        $this->hasColumn('relation_count', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));


        $this->index('relation_count', array(
             'fields' => 
             array(
              0 => 'relation_count',
             ),
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Product as Product1', array(
             'local' => 'product_id1',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('Product as Product2', array(
             'local' => 'product_id2',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}