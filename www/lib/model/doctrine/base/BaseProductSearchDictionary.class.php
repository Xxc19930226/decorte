<?php

/**
 * BaseProductSearchDictionary
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $word
 * @property string $likeness
 * 
 * @method integer                 getId()       Returns the current record's "id" value
 * @method string                  getWord()     Returns the current record's "word" value
 * @method string                  getLikeness() Returns the current record's "likeness" value
 * @method ProductSearchDictionary setId()       Sets the current record's "id" value
 * @method ProductSearchDictionary setWord()     Sets the current record's "word" value
 * @method ProductSearchDictionary setLikeness() Sets the current record's "likeness" value
 * 
 * @package    cosmedecorte
 * @subpackage model
 * @author     BROADTECH INC.
 * @version    SVN: $Id: Builder.php 12 2011-05-12 03:42:19Z oda $
 */
abstract class BaseProductSearchDictionary extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('product_search_dictionary');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('word', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('likeness', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));


        $this->index('word', array(
             'fields' => 
             array(
              0 => 'word',
             ),
             ));
        $this->index('likeness', array(
             'fields' => 
             array(
              0 => 'likeness',
             ),
             'type' => 'unique',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}