<?php

/**
 * BaseMailGroupLogic
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $group_id
 * @property enum $operator
 * @property MailGroup $Group
 * @property Doctrine_Collection $Terms
 * 
 * @method integer             getId()       Returns the current record's "id" value
 * @method integer             getGroupId()  Returns the current record's "group_id" value
 * @method enum                getOperator() Returns the current record's "operator" value
 * @method MailGroup           getGroup()    Returns the current record's "Group" value
 * @method Doctrine_Collection getTerms()    Returns the current record's "Terms" collection
 * @method MailGroupLogic      setId()       Sets the current record's "id" value
 * @method MailGroupLogic      setGroupId()  Sets the current record's "group_id" value
 * @method MailGroupLogic      setOperator() Sets the current record's "operator" value
 * @method MailGroupLogic      setGroup()    Sets the current record's "Group" value
 * @method MailGroupLogic      setTerms()    Sets the current record's "Terms" collection
 * 
 * @package    cosmedecorte
 * @subpackage model
 * @author     BROADTECH INC.
 * @version    SVN: $Id: Builder.php 12 2011-05-12 03:42:19Z oda $
 */
abstract class BaseMailGroupLogic extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('mail_group_logic');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('group_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('operator', 'enum', null, array(
             'type' => 'enum',
             'values' => 
             array(
              0 => 'AND',
              1 => 'OR',
             ),
             'notnull' => true,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('MailGroup as Group', array(
             'local' => 'group_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasMany('MailGroupLogicTerm as Terms', array(
             'local' => 'id',
             'foreign' => 'logic_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}