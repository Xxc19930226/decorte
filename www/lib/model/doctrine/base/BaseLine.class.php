<?php

/**
 * BaseLine
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $name
 * @property string $name_en
 * @property boolean $skincare_system_flag
 * @property boolean $major_flag
 * @property integer $priority
 * @property string $slug
 * @property text $search_index
 * @property Doctrine_Collection $Products
 * 
 * @method integer             getId()                   Returns the current record's "id" value
 * @method string              getName()                 Returns the current record's "name" value
 * @method string              getNameEn()               Returns the current record's "name_en" value
 * @method boolean             getSkincareSystemFlag()   Returns the current record's "skincare_system_flag" value
 * @method boolean             getMajorFlag()            Returns the current record's "major_flag" value
 * @method integer             getPriority()             Returns the current record's "priority" value
 * @method string              getSlug()                 Returns the current record's "slug" value
 * @method text                getSearchIndex()          Returns the current record's "search_index" value
 * @method Doctrine_Collection getProducts()             Returns the current record's "Products" collection
 * @method Line                setId()                   Sets the current record's "id" value
 * @method Line                setName()                 Sets the current record's "name" value
 * @method Line                setNameEn()               Sets the current record's "name_en" value
 * @method Line                setSkincareSystemFlag()   Sets the current record's "skincare_system_flag" value
 * @method Line                setMajorFlag()            Sets the current record's "major_flag" value
 * @method Line                setPriority()             Sets the current record's "priority" value
 * @method Line                setSlug()                 Sets the current record's "slug" value
 * @method Line                setSearchIndex()          Sets the current record's "search_index" value
 * @method Line                setProducts()             Sets the current record's "Products" collection
 * 
 * @package    cosmedecorte
 * @subpackage model
 * @author     BROADTECH INC.
 * @version    SVN: $Id: Builder.php 12 2011-05-12 03:42:19Z oda $
 */
abstract class BaseLine extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('line');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('name', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('name_en', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('skincare_system_flag', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             ));
        $this->hasColumn('major_flag', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             ));
        $this->hasColumn('priority', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('slug', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('search_index', 'text', null, array(
             'type' => 'text',
             ));


        $this->index('slug', array(
             'fields' => 
             array(
              0 => 'slug',
             ),
             'type' => 'unique',
             ));
        $this->index('name', array(
             'fields' => 
             array(
              0 => 'name',
             ),
             ));
        $this->index('search_index', array(
             'fields' => 
             array(
              'search_index' => 
              array(
              'length' => 255,
              ),
             ),
             ));
        $this->option('orderBy', 'priority');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('Product as Products', array(
             'local' => 'id',
             'foreign' => 'line_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}